buildscript {
    ext {
        springBootVersion = '1.5.15.RELEASE'
    }
    repositories {
        mavenCentral()
        maven { url 'https://plugins.gradle.org/m2/' }
    }
    dependencies {
        classpath "org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}"
        classpath 'com.bmuschko:gradle-docker-plugin:3.1.0'
    }
}
plugins {
    id 'com.gorylenko.gradle-git-properties' version '1.5.1'
}

apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'application'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'com.bmuschko.docker-java-application'

sourceCompatibility = 10
targetCompatibility = 10

mainClassName = 'eureka.Eureka'

springBoot  {
    buildInfo()
}

repositories {
    mavenCentral()
}
dependencyManagement {
    imports {
        mavenBom 'org.springframework.cloud:spring-cloud-dependencies:Edgware.SR4'
    }
}
dependencies {
    compile 'javax.xml.bind:jaxb-api:+'
    compile 'com.sun.xml.bind:jaxb-core:+'
    compile 'com.sun.xml.bind:jaxb-impl:+'
    compile 'javax.activation:activation:+'

    compile 'org.springframework.boot:spring-boot-starter-actuator'
    compile 'org.springframework.boot:spring-boot-starter-web'
    compile 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-server'
    compile 'org.jolokia:jolokia-core'

    compileOnly 'org.projectlombok:lombok:1.+'

    testCompile 'org.springframework.boot:spring-boot-starter-test'

    // TODO: remove this hack, the docker plugin uses javax.activation which was removed from Java 9
    dockerJava 'javax.activation:activation:+'
    dockerJava 'cglib:cglib:+'
    dockerJava 'com.github.docker-java:docker-java:3.+'
    dockerJava 'org.slf4j:slf4j-simple:1.+'
}

docker {
    javaApplication {
        baseImage = 'openjdk:10'
        tag = "$project.dockerNamespace/$project.applicationName:$project.version"
        maintainer = project.maintainer
        ports = [8761]
    }
    registryCredentials {
        username = dockerRegistryUserName
        password = dockerRegistryPassword
    }
}

task cleanAll {
    dependsOn clean, cleanIdea, cleanIdeaWorkspace
    doLast {
        delete 'out', 'logs'
    }
}

task wrapper(type: Wrapper) {
    gradleVersion = '4.9'
    distributionType = Wrapper.DistributionType.ALL
}
